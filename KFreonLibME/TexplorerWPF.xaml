<Window x:Class="KFreonLibME.Texplorer2"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:useful="clr-namespace:UsefulThings.WPF;assembly=UsefulThings"
             xmlns:e="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:ME="clr-namespace:KFreonLibME"
             mc:Ignorable="d" Height="540" Width="1669.025" Title="KFreon's (via saltisgood) Texplorer 2.0" Closing="Window_Closing">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="ResourceDict.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Grid x:Name="TOPGrid">
        <Grid>
            <Menu Margin="0,0,1046,0" Background="{x:Null}" Height="29" VerticalAlignment="Top" IsEnabled="{Binding Busy, Converter={StaticResource InverseBoolConverter}}">
                <MenuItem Header="Save Changes" Command="{Binding SaveCommand}"/>
            </Menu>

            <Grid x:Name="MainGrid" Margin="0,29,0,35">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="315"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="300"/>
                </Grid.ColumnDefinitions>

                <!-- Column 1 -->
                <StackPanel x:Name="MainContextBar" Grid.Column="1" Orientation="Horizontal" Height="32" VerticalAlignment="Bottom">
                    <Button x:Name="ChangeTextureButton" Content="Change/Add Bigger Texture" Margin="5,5" Style="{StaticResource GeneralButtonStyle}" Click="ChangeTextureButton_Click"/>
                    <Button x:Name="RevertChanges" Content="Revert" Style="{StaticResource GeneralButtonStyle}" Margin="5,5" Visibility="{Binding ElementName=MainListBox, Path=SelectedItem.HasChanged, Converter={StaticResource BoolToVisConverter}}" Command="{Binding RevertCommand}"/>
                </StackPanel>

                <!-- Column 1 -->
                <TreeView x:Name="MainTreeView" BorderBrush="{x:Null}" DataContext="{Binding CurrentTree}" ItemsSource="{Binding TreeTexes}" VirtualizingPanel.IsVirtualizing="False">
                    <TreeView.Resources>
                        <Style TargetType="{x:Type Image}" x:Key="MyImage">
                            <Setter Property="Source" Value="{StaticResource Folder_Closed}"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsExpanded, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="True">
                                    <Setter Property="Source" Value="{StaticResource Folder_Open}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TreeView.Resources>

                    <TreeView.ItemContainerStyle>
                        <Style TargetType="TreeViewItem">
                            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
                            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
                        </Style>
                    </TreeView.ItemContainerStyle>

                    <TreeView.ItemTemplate>
                        <HierarchicalDataTemplate ItemsSource="{Binding TreeTexes}">
                            <StackPanel Orientation="Horizontal" Margin="0,2">
                                <Image Style="{StaticResource MyImage}"/>
                                <TextBlock Text="{Binding Name}" Margin="5,0,0,0" VerticalAlignment="Center"/>
                            </StackPanel>

                        </HierarchicalDataTemplate>
                    </TreeView.ItemTemplate>
                </TreeView>

                <!-- Column 2 -->
                <ListBox x:Name="MainListBox" Grid.Column="1" Margin="0,0,0,32" BorderBrush="{x:Null}" ItemsSource="{Binding SelectedItem.Textures, ElementName=MainTreeView}" SelectionChanged="MainListBox_SelectionChanged" GotFocus="MainListView_GotFocus" LostFocus="MainListView_LostFocus" MouseDoubleClick="MainListBox_MouseDoubleClick">
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <useful:VirtualizingWrapPanel/>
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                            <Setter Property="IsSelected" Value="{Binding IsSelected}"/>
                        </Style>
                    </ListBox.ItemContainerStyle>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Visibility="{Binding IsSearchVisible, Converter={StaticResource BoolToVisConverter}}">
                                <Image Source="{Binding ThumbnailPath, Converter={StaticResource UriConverter}, FallbackValue={StaticResource DefaultTexture}, TargetNullValue={StaticResource DefaultTexture}}"/>
                                <TextBlock Text="{Binding EntryName}" VerticalAlignment="Center" Margin="5"/>
                            </StackPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
                <Image Grid.Column="1" Source="{Binding ImagePreview}" Visibility="{Binding ImagePreview, Mode=TwoWay, Converter={StaticResource VisibiltySourceNullConverter}}" MouseDown="Image_MouseDown" d:IsHidden="True"/>

                <!-- Column 3 -->
                <Button x:Name="CloserButton" Grid.Column="2" Margin="5,0,0,0" FontWeight="Bold" FontSize="14" Style="{StaticResource GeneralButtonStyle}" Click="CloserButton_Click" HorizontalAlignment="Left" Width="33" Height="23" VerticalAlignment="Top"/>
                <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom" Grid.Column="2" Margin="0,0,0,5">
                    <Button Content="Select All" HorizontalAlignment="Left" Width="64" Style="{StaticResource GeneralButtonStyle}" Command="{Binding SelectAllCommand}" CommandParameter="{Binding SelectedItem, ElementName=MainListBox}"/>
                    <Button Content="De-Select All"  HorizontalAlignment="Left" Width="80" Style="{StaticResource GeneralButtonStyle}" Command="{Binding DeSelectAllCommand}" CommandParameter="{Binding SelectedItem, ElementName=MainListBox}"/>
                    <Button x:Name="SavePCCListButton" Content="Save as list" Style="{StaticResource GeneralButtonStyle}" HorizontalAlignment="Left" Width="74" Click="SavePCCListButton_Click"/>
                </StackPanel>

                <DockPanel x:Name="PCCDocker" Grid.Column="2" Margin="0,28">
                    <TextBlock  Text="Details" FontSize="16" FontWeight="Bold" DockPanel.Dock="Top" HorizontalAlignment="Center"/>
                    <TextBlock FontStyle="Italic" Text="{Binding SelectedItem.FullTexCount, ElementName=MainTreeView, Mode=OneWay, StringFormat=Selected Node Texture Count: {0:d}}" TextWrapping="NoWrap" DockPanel.Dock="Top">
                    </TextBlock>
                    <TextBox Text="{Binding SelectedItem.Details, ElementName=MainListBox, Mode=OneWay}" TextWrapping="NoWrap"  IsReadOnly="True" BorderBrush="{x:Null}" DockPanel.Dock="Top"/>

                    <TextBlock Text="PCC's" Margin="0, 20,0,0" FontSize="16" FontWeight="Bold" DockPanel.Dock="Top" HorizontalAlignment="Center"/>
                    <ListBox x:Name="PCCListBox" ItemTemplate="{StaticResource PCCExpIDListTemplate}" ItemsSource="{Binding SelectedItem.PCCs, ElementName=MainListBox}" DockPanel.Dock="Top" GotFocus="PCCListBox_GotFocus" LostFocus="PCCListBox_LostFocus"/>
                </DockPanel>




            </Grid>
            <DockPanel Margin="0,5,350,0" VerticalAlignment="Top" HorizontalAlignment="Right" MaxHeight="200" LastChildFill="False">
                <StackPanel Orientation="Horizontal" DockPanel.Dock="Top">
                    <TextBox x:Name="SearchBox" Tag="Search Textures, pccs, and expIDs..." Style="{StaticResource SearchBox}" Template="{StaticResource SearchBoxTemplate}" Text="{Binding Search.SearchBoxText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding IsChecked, ElementName=AdvancedSearchChecker, Converter={StaticResource BoolToVisConverter}, ConverterParameter={StaticResource True}}"/>
                    <StackPanel Orientation="Horizontal" Visibility="{Binding IsChecked, ElementName=AdvancedSearchChecker, Converter={StaticResource BoolToVisConverter}}">
                        <TextBox Text="{Binding Search.SearchBox1Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" x:Name="NameBox" Tag="Search Names..." Template="{StaticResource SearchBoxTemplate}" Style="{StaticResource SearchBox}"/>
                        <TextBox Text="{Binding Search.SearchBox2Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" x:Name="PCCBox" Tag="Search PCCs..." Template="{StaticResource SearchBoxTemplate}" Style="{StaticResource SearchBox}"/>
                        <TextBox Text="{Binding Search.SearchBox3Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" x:Name="ExpIDBox" Tag="Search ExpIDs..." Width="100" Template="{StaticResource SearchBoxTemplate}" Style="{StaticResource SearchBox}"/>
                        <TextBox Text="{Binding Search.SearchBox4Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" x:Name="HashBox" Tag="Search Hashes..." Width="100" Template="{StaticResource SearchBoxTemplate}" Style="{StaticResource SearchBox}"/>
                    </StackPanel>
                    <CheckBox x:Name="AdvancedSearchChecker" Content="Advanced Search" VerticalAlignment="Center" Margin="0,0,15,0"/>
                </StackPanel>

                <DockPanel DockPanel.Dock="Right" Visibility="{Binding Search.IsEmpty, Converter={StaticResource BoolToVisConverter}, ConverterParameter={StaticResource True}}">
                    <ToggleButton DockPanel.Dock="Bottom" Content="Show/Hide" Background="White" FontSize="10" Click="ToggleButton_Click">
                        <ToggleButton.Triggers>
                            <EventTrigger RoutedEvent="ToggleButton.Checked">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Height" Storyboard.TargetName="SearchResultsBox" From="165" To="0" Duration="0:0:0.2">
                                            <DoubleAnimation.EasingFunction>
                                                <CircleEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>

                            <EventTrigger RoutedEvent="ToggleButton.Unchecked">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Height" Storyboard.TargetName="SearchResultsBox" From="0" To="165" Duration="0:0:0.2">
                                            <DoubleAnimation.EasingFunction>
                                                <CircleEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </ToggleButton.Triggers>

                    </ToggleButton>
                    <ListBox x:Name="SearchResultsBox" ItemsSource="{Binding Search.Results}" SelectionChanged="SearchResultsBox_SelectionChanged">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <Image Width="32" Height="32" Source="{Binding ThumbnailPath, Converter={StaticResource UriConverter}, FallbackValue={StaticResource DefaultTexture}, TargetNullValue={StaticResource DefaultTexture}}"/>
                                    <TextBlock Text="{Binding EntryName}" VerticalAlignment="Center" Margin="5"/>
                                </StackPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>

                </DockPanel>

            </DockPanel>

            <StackPanel x:Name="GameTreeStatusStacker"  Orientation="Horizontal" Height="29" VerticalAlignment="Top" HorizontalAlignment="Right" Background="White" IsEnabled="{Binding Busy, Converter={StaticResource InverseBoolConverter}}">
                <ContentControl Template="{StaticResource GameIndicators}"/>
                <ContentControl Template="{StaticResource TreeIndicators}"/>
                <Button x:Name="TreeSettingsButton" Content="Settings" Style="{StaticResource GeneralButtonStyle}" Command="{Binding ShowTreeGameInfoPanelCommand}" CommandParameter="{StaticResource True}"/>
            </StackPanel>

            <StatusBar Style="{StaticResource KFreonStatusBar}">
                <ProgressBar Height="23" Width="249" Value="{Binding PrimaryProgress}" Maximum="{Binding MaxPrimaryProgress}" IsIndeterminate="{Binding PrimaryIndeterminate}"/>
                <TextBlock Text="{Binding PrimaryStatus}"/>
                <Label Margin="10,0,0,0" Content="Elapsed Time: "/>
                <TextBlock Text="{Binding ElapsedTime}"/>

                <StatusBarItem HorizontalAlignment="Right">
                    <StackPanel Orientation="Horizontal">
                        <Label Content="Number of textures: " Foreground="Gray" Visibility="{Binding ElementName=TreeTexCount, Path=Visibility}" VerticalAlignment="Center" VerticalContentAlignment="Center"/>
                        <TextBlock x:Name="TreeTexCount" VerticalAlignment="Center" Text="{Binding NumTreeTexes}" Visibility="{Binding CurrentTree.Valid, Converter={StaticResource BoolToVisConverter}}" Margin="0,0,10,0" Foreground="Gray"/>
                        <StatusBarItem Template="{StaticResource VersionCancelTemplate}" Height="35" VerticalAlignment="Center"/>
                    </StackPanel>
                </StatusBarItem>
            </StatusBar>
        </Grid>

        <Grid x:Name="TreeGrid" >
            <Grid.Background>
                <SolidColorBrush x:Name="TreeGridBackgroundBrush" Color="Black" Opacity="0.7"/>
            </Grid.Background>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition x:Name="SecondColumn" Width="3*"/>
            </Grid.ColumnDefinitions>

            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup>
                    <VisualState Name="Open">
                        <Storyboard x:Name="TreePanelOpeningAnim">
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="TreeGrid">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>

                            <useful:GridLengthAnimation To="3*" From="0" Duration="0:0:1.3" Storyboard.TargetName="SecondColumn" Storyboard.TargetProperty="Width" DecelerationRatio="1">
                                <useful:GridLengthAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseOut"/>
                                </useful:GridLengthAnimation.EasingFunction>
                            </useful:GridLengthAnimation>

                            <DoubleAnimation x:Name="TreeGridBackgroundOpacity2" To="0.7" From="0" Duration="0:0:1.3" Storyboard.TargetName="TreeGridBackgroundBrush" Storyboard.TargetProperty="Opacity" DecelerationRatio="1">
                                <DoubleAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </VisualState>

                    <VisualState Name="Closed">
                        <Storyboard x:Name="TreePanelClosingAnim">
                            <useful:GridLengthAnimation To="0" From="3*" Duration="0:0:0.7" Storyboard.TargetName="SecondColumn" Storyboard.TargetProperty="Width" DecelerationRatio="1">
                                <useful:GridLengthAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseOut"/>
                                </useful:GridLengthAnimation.EasingFunction>
                            </useful:GridLengthAnimation>

                            <DoubleAnimation x:Name="TreeGridBackgroundOpacity" To="0" From="0.7" Duration="0:0:0.7" Storyboard.TargetName="TreeGridBackgroundBrush" Storyboard.TargetProperty="Opacity" DecelerationRatio="1">
                                <DoubleAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>

                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="TreeGrid">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.7" Value="{x:Static Visibility.Collapsed}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>

            <Grid Grid.Column="1" Background="White" Margin="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="295*"/>
                    <RowDefinition Height="214*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="773*"/>
                    <ColumnDefinition Width="473*"/>
                </Grid.ColumnDefinitions>

                <Grid.Resources>
                    <Style TargetType="ListBoxItem" BasedOn="{StaticResource {x:Type ListBoxItem}}" x:Key="DetailsValidator">
                        <Setter Property="Visibility" Value="Visible"/>
                        <Setter Property="Foreground" Value="Red"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ValidDate}" Value="true">
                                <Setter Property="Foreground" Value="Black"/>
                            </DataTrigger>

                            <DataTrigger Binding="{Binding ValidDate}" Value="null">
                                <Setter Property="Foreground" Value="Green"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>

                    <DataTemplate x:Key="DetailsValidatorTemplate">
                        <StackPanel Orientation="Horizontal">
                            <CheckBox x:Name="Checker" IsChecked="{Binding IsChecked}"/>
                            <TextBlock Text="{Binding Info.FullName}">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="FontStyle" Value="Normal"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=Checker, Path=IsChecked}" Value="false">
                                                <Setter Property="FontStyle" Value="Italic"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </StackPanel>
                    </DataTemplate>

                    <ControlTemplate x:Key="DetailsStacker">
                        <StackPanel Orientation="Vertical">
                            <StackPanel Orientation="Horizontal">
                                <Label Content="Size: " FontWeight="Bold"/>
                                <TextBlock Text="{Binding Path=Length, Converter={StaticResource FileSizeToStringConverter}}" Margin="0,5"/>
                                <Label Margin="10,0,0,0" Content="Status: " FontWeight="Bold"/>
                                <TextBlock Text="{Binding ValidityString}" Margin="0,5"/>
                                <Label Content="Date threshold: " FontWeight="Bold" Margin="20,0,0,0"/>
                                <TextBlock Text="{Binding ThresholdString}" Margin="0,5"/>
                            </StackPanel>

                            <StackPanel Orientation="Horizontal">
                                <Label Content="Date Modified: " FontWeight="Bold"/>
                                <TextBlock Text="{Binding Path=Info.LastWriteTime, ConverterCulture=en-AU}" Margin="0,5"/>
                            </StackPanel>
                        </StackPanel>
                    </ControlTemplate>
                </Grid.Resources>

                <TextBlock x:Name="TreePanelClosingButton" Text="&gt;" Width="35" FontSize="24" Foreground="Black" Padding="10,2,0,0" HorizontalAlignment="Left" Height="41" VerticalAlignment="Top" MouseDown="TreePanelClosingButton_MouseDown">
                    <TextBlock.Background>
                        <VisualBrush Stretch="None">
                            <VisualBrush.Visual>
                                <Ellipse x:Name="TreeCloser" Width="30" Height="30" Stroke="Gray" StrokeThickness="1" Fill="White"/>
                            </VisualBrush.Visual>
                        </VisualBrush>
                    </TextBlock.Background>

                    <TextBlock.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="LightGreen" Duration="0:0:0.1" Storyboard.TargetName="TreeCloser" Storyboard.TargetProperty="(Ellipse.Fill).(SolidColorBrush.Color)"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="White" Duration="0:0:0.1" Storyboard.TargetName="TreeCloser" Storyboard.TargetProperty="(Ellipse.Fill).(SolidColorBrush.Color)"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </TextBlock.Triggers>
                </TextBlock>
                <StackPanel Orientation="Horizontal" Margin="40,0,10,0" Grid.ColumnSpan="2"  Height="41" VerticalAlignment="Top" HorizontalAlignment="Center">
                    <Label FontSize="20" Content="ME" FontWeight="Bold" HorizontalAlignment="Center"/>
                    <TextBlock Foreground="#FF0074FF" FontSize="24" Text="{Binding GameVersion}" FontWeight="Bold" Margin="0,2,8,0"/>
                    <Label FontSize="20" Content="Information" FontWeight="Bold" HorizontalAlignment="Center"/>
                </StackPanel>

                <Label Content="Game Files Information" FontSize="18" Margin="10,25,10,0" Height="41" VerticalAlignment="Top" HorizontalContentAlignment="Center" IsHitTestVisible="False"/>

                <DockPanel x:Name="BaseGameTOP" Margin="5,55,0,0">
                    <DockPanel DockPanel.Dock="Top">
                        <CheckBox x:Name="ShowBaseGameModifiedOnlyCheckBox" Content="Only Modified" VerticalAlignment="Center" IsChecked="{Binding BaseGameModifiedChecker, Converter={StaticResource MutuallyExclusiveCheckerConverter}}" Margin="5,0" DockPanel.Dock="Left"/>
                        <CheckBox x:Name="ShowBaseGameNewOnlyCheckBox" Content="Only New" VerticalAlignment="Center" IsChecked="{Binding BaseGameModifiedChecker, Converter={StaticResource MutuallyExclusiveCheckerConverter}, ConverterParameter={StaticResource True}}" Margin="5,0" DockPanel.Dock="Left"/>
                        <TextBlock Margin="20,0,0,0" DockPanel.Dock="Right" Text="{Binding BaseGameFiles.Count, StringFormat=Count:  {0}}" VerticalAlignment="Center" FontStyle="Italic" Foreground="DarkGreen" HorizontalAlignment="Center" IsHitTestVisible="False" FontSize="12"/>
                        <Button Content="Uncheck All" DockPanel.Dock="Right" FontSize="10" Height="20" Style="{StaticResource GeneralButtonStyle}" Command="{Binding UncheckAllCommand}" CommandParameter="{StaticResource True}"/>
                        <Button Content="Check All" DockPanel.Dock="Right" Height="20" FontSize="10" Style="{StaticResource GeneralButtonStyle}" Command="{Binding CheckAllCommand}" CommandParameter="{StaticResource True}"/>
                        <Label Content="BaseGame" Foreground="Blue" HorizontalContentAlignment="Center" IsHitTestVisible="False" FontSize="14"/>
                    </DockPanel>
                    

                    <TextBox x:Name="BaseGameSearchBox" Tag="Search..." Template="{StaticResource SearchBoxTemplate}" Text="{Binding BaseGameSearch.SearchBox1Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" DockPanel.Dock="Top"/>
                    <ContentControl Template="{StaticResource DetailsStacker}" DataContext="{Binding SelectedItem, ElementName=BaseGameListBox}" DockPanel.Dock="Bottom"/>
                    <Grid DockPanel.Dock="Top">
                        <ListBox x:Name="BaseGameListBox" VirtualizingPanel.IsVirtualizing="True" VirtualizingPanel.IsVirtualizingWhenGrouping="True" ItemsSource="{Binding BaseGameFilesView}"  
                                 ItemContainerStyle="{StaticResource DetailsValidator}" ItemTemplate="{StaticResource DetailsValidatorTemplate}" Visibility="{Binding LoadingGameFiles, Converter={StaticResource BoolToVisConverter}, ConverterParameter={StaticResource True}}" SelectionMode="Extended"/>
                        <Label HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontSize="40" Background="Gray">
                            <Label.Style>
                                <Style TargetType="Label">
                                    <Setter Property="Content" Value="Loading. Please wait..."/>
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding LoadingGameFiles}" Value="true"/>
                                                <Condition Binding="{Binding BaseGameFiles.Count}" Value="0"/>
                                            </MultiDataTrigger.Conditions>
                                            
                                            <MultiDataTrigger.Setters>
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </MultiDataTrigger.Setters>
                                        </MultiDataTrigger>

                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding LoadingGameFiles}" Value="false"/>
                                                <Condition Binding="{Binding BaseGameFiles.Count}" Value="0"/>
                                            </MultiDataTrigger.Conditions>

                                            <MultiDataTrigger.Setters>
                                                <Setter Property="Visibility" Value="Visible"/>
                                                <Setter Property="Content" Value="Missing gamefiles!"/>
                                            </MultiDataTrigger.Setters>
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Label.Style>
                        </Label>
                    </Grid>
                </DockPanel>

                <DockPanel x:Name="DLCTOP" Margin="5,0,0,0" Grid.Row="1">
                        <DockPanel DockPanel.Dock="Top">
                            <CheckBox x:Name="ShowDLCModifiedOnlyCheckBox" Content="Only Modified" VerticalAlignment="Center" IsChecked="{Binding DLCModifiedChecker, Converter={StaticResource MutuallyExclusiveCheckerConverter}}" Margin="5,0"/>
                            <CheckBox x:Name="ShowDLCNewOnlyCheckBox" Content="Only New" VerticalAlignment="Center" IsChecked="{Binding DLCModifiedChecker, Converter={StaticResource MutuallyExclusiveCheckerConverter}, ConverterParameter={StaticResource True}}" Margin="5,0"/>

                            <TextBlock Margin="10,0,0,0" DockPanel.Dock="Right" Text="{Binding DLCFilesCount, StringFormat=Num Files:   {0}}" VerticalAlignment="Center" FontStyle="Italic"  HorizontalAlignment="Right" IsHitTestVisible="False" FontSize="12" Foreground="DarkGreen"/>
                            <TextBlock Margin="20,0,0,0" DockPanel.Dock="Right" Text="{Binding DLCs.Count, StringFormat=DLCs:   {0}}" VerticalAlignment="Center" FontStyle="Italic"  HorizontalAlignment="Right" IsHitTestVisible="False" FontSize="12" Foreground="DarkGreen"/>
                            <Button Content="Uncheck All" DockPanel.Dock="Right" FontSize="10" Height="20" Style="{StaticResource GeneralButtonStyle}" Command="{Binding UncheckAllCommand}"/>
                            <Button Content="Check All" DockPanel.Dock="Right" Height="20" FontSize="10" Style="{StaticResource GeneralButtonStyle}" Command="{Binding CheckAllCommand}"/>
                            <Label Content="DLC" HorizontalContentAlignment="Center" HorizontalAlignment="Center" IsHitTestVisible="False" FontSize="14" Foreground="Blue"/>
                        </DockPanel>

                    <TextBox x:Name="DLCSearchBox" Tag="Search..." Template="{StaticResource SearchBoxTemplate}" Text="{Binding DLCSearch.SearchBox1Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" DockPanel.Dock="Top"/>
                    <Grid DockPanel.Dock="Bottom">
                        <ContentControl x:Name="DLCDetails" Template="{StaticResource DetailsStacker}" DataContext="{Binding SelectedItem, ElementName=DLCSListBox}"/>
                        <ContentControl x:Name="DLCFileDetails" Template="{StaticResource DetailsStacker}" DataContext="{Binding SelectedItem, ElementName=DLCFilesListBox}"/>
                        <Button x:Name="ScanButton" HorizontalAlignment="Center" VerticalAlignment="Bottom" FontSize="18" Foreground="Green" Click="ScanButton_Click">
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource GeneralButtonStyle}">
                                    <Setter Property="Content" Value="Scan!"/>
                                    <Setter Property="IsEnabled" Value="true"/>

                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding CurrentTree.Exists}" Value="true">
                                            <Setter Property="Content" Value="Scan Anyway?"/>
                                        </DataTrigger>

                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding NewUnscannedFiles}" Value="false"/>
                                                <Condition Binding="{Binding CurrentTree.Valid}" Value="true"/>
                                            </MultiDataTrigger.Conditions>

                                            <MultiDataTrigger.Setters>
                                                <Setter Property="Content" Value="Tree Loaded!"/>
                                                <Setter Property="IsEnabled" Value="false"/>
                                            </MultiDataTrigger.Setters>
                                        </MultiDataTrigger>

                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding NewUnscannedFiles}" Value="true"/>
                                                <Condition Binding="{Binding CurrentTree.Valid}" Value="true"/>
                                            </MultiDataTrigger.Conditions>

                                            <MultiDataTrigger.Setters>
                                                <Setter Property="Content" Value="Add to Tree!"/>
                                            </MultiDataTrigger.Setters>
                                        </MultiDataTrigger>
                                        
                                        <DataTrigger Binding="{Binding LoadingGameFiles}" Value="true">
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </Grid>

                    <ListBox x:Name="DLCSListBox" ItemsSource="{Binding DLCsView}" DockPanel.Dock="Left" VirtualizingPanel.IsVirtualizing="True" VirtualizingPanel.IsVirtualizingWhenGrouping="True">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <CheckBox x:Name="DLCSelectBox" IsChecked="{Binding IsChecked}"/>
                                    <TextBlock Text="{Binding Name}">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="FontStyle" Value="Normal"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ElementName=DLCSelectBox, Path=IsChecked}" Value="false">
                                                        <Setter Property="FontStyle" Value="Italic"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </StackPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>

                        <ListBox.Triggers>
                            <EventTrigger RoutedEvent="ListBox.GotFocus">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DLCFileDetails" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DLCDetails" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </ListBox.Triggers>
                    </ListBox>
                    <ListBox x:Name="DLCFilesListBox" ItemsSource="{Binding ElementName=DLCSListBox, Path=SelectedItem.FilesView}" VirtualizingPanel.IsVirtualizing="True" VirtualizingPanel.IsVirtualizingWhenGrouping="True" DockPanel.Dock="Right" ItemContainerStyle="{StaticResource DetailsValidator}" ItemTemplate="{StaticResource DetailsValidatorTemplate}">
                        <ListBox.Triggers>
                            <EventTrigger RoutedEvent="ListBox.GotFocus">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DLCFileDetails" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DLCDetails" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </ListBox.Triggers>
                    </ListBox>
                </DockPanel>

                <StackPanel x:Name="TreePanel" DataContext="{Binding CurrentTree}" Margin="20,25,0,0" Grid.Column="1" Grid.RowSpan="2" Height="320" VerticalAlignment="Top">
                    <Label Content="Tree Information" FontSize="18" HorizontalAlignment="Center"/>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="75*"/>
                            <ColumnDefinition Width="76*"/>
                        </Grid.ColumnDefinitions>

                        <!-- Column 1 -->
                        <Label Content="Does Tree Exist on Disk?" FontSize="20" Foreground="Blue" HorizontalAlignment="Center" VerticalAlignment="Top"/>
                        <TextBlock FontSize="36" HorizontalAlignment="Center" Margin="0,25,0,0" VerticalAlignment="Top">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Foreground" Value="Red"/>
                                    <Setter Property="Text" Value="NOPE! :("/>

                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Exists}" Value="true">
                                            <Setter Property="Foreground" Value="LightGreen"/>
                                            <Setter Property="Text" Value="YES! :)"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <!-- END Column 1 -->

                        <!-- Column 2 -->
                        <Label Content="Is Tree Valid?" FontSize="20" Foreground="Blue" HorizontalAlignment="Center" VerticalAlignment="Top" Grid.Column="1"/>
                        <TextBlock FontSize="36" HorizontalAlignment="Center" Margin="0,25,0,0" VerticalAlignment="Top" Grid.Column="1">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Foreground" Value="Red"/>
                                    <Setter Property="Text" Value="NOPE! :("/>

                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Valid}" Value="true">
                                            <Setter Property="Foreground" Value="LightGreen"/>
                                            <Setter Property="Text" Value="YES! :)"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <!-- END Column 2-->
                    </Grid>


                    <StackPanel Orientation="Horizontal">
                        <Label Content="Location: " FontWeight="Bold"/>
                        <TextBlock Text="{Binding TreeLocation}" Margin="0,5">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Foreground" Value="Black"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Exists}" Value="false">
                                            <Setter Property="Foreground" Value="Red"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </StackPanel>

                    <Label Content="Tree Operations" Margin="0,10,0,0" HorizontalContentAlignment="Center" FontSize="16"/>
                    <Button x:Name="ImportTreeButton" Content="Import Tree" Style="{StaticResource GeneralButtonStyle}" HorizontalAlignment="Left" Margin="0,2" Click="ImportTreeButton_Click"/>
                    <Button x:Name="ExportTreeButton" Content="Export Tree" Style="{StaticResource GeneralButtonStyle}" HorizontalAlignment="Left" Margin="0,2" IsEnabled="{Binding Exists}" Click="ExportTreeButton_Click"/>
                    <StackPanel Orientation="Horizontal">
                        <Button x:Name="RemoveCurrentTreeButton" Style="{StaticResource GeneralButtonStyle}" Content="Remove Current Tree" HorizontalAlignment="Left" IsEnabled="{Binding Exists}" Margin="0,2">
                            <Button.Triggers>
                                <EventTrigger RoutedEvent="Button.Click">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RemoveConfirmationButton" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames  Storyboard.TargetProperty="(UIElement.IsEnabled)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource False}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Button.Triggers>
                        </Button>
                        <Button x:Name="RemoveConfirmationButton" Style="{StaticResource GeneralButtonStyle}" Content="Are you sure?" HorizontalAlignment="Left" Visibility="Collapsed" Click="RemoveCurrentTreeButton_Click">
                            <Button.Triggers>
                                <EventTrigger RoutedEvent="Button.Click">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RemoveCurrentTreeButton" Storyboard.TargetProperty="(UIElement.IsEnabled)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource True}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Button.Triggers>
                        </Button>
                    </StackPanel>

                    <Label Content="Tree Comparisons" FontWeight="Bold" HorizontalContentAlignment="Center" Margin="0,10,0,0"/>
                    <Button x:Name="CompareWCurrent" Content="Compare Tree with External" Style="{StaticResource GeneralButtonStyle}" HorizontalAlignment="Left" Margin="0,2" Click="CompareWCurrent_Click"/>
                    <Button x:Name="CompareBetweenTrees" Content="Compare Two Trees" Style="{StaticResource GeneralButtonStyle}" HorizontalAlignment="Left" Margin="0,2" Click="CompareBetweenTrees_Click"/>

                </StackPanel>

                <ListBox Grid.Column="1"  Margin="0,55,0,0" Grid.Row="1" ItemsSource="{Binding TreeComparisonMismatches}">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Vertical">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding tex1.EntryName}"/>
                                    <TextBlock Text="{Binding tex2.EntryName}"/>
                                    <ListBox ItemsSource="{Binding Reasons}"/>
                                </StackPanel>
                                <TextBlock Text="{Binding tex1.Hash}"/>
                                <TextBlock Text="{Binding tex2.Hash}"/>
                                <Expander>
                                    <StackPanel Orientation="Horizontal">
                                        <ListBox ItemsSource="{Binding tex1.PCCs}"/>
                                        <ListBox ItemsSource="{Binding tex2.PCCs}"/>
                                    </StackPanel>
                                </Expander>
                            </StackPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </Grid>
        </Grid>
    </Grid>
</Window>
